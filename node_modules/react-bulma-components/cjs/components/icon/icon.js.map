{"version":3,"sources":["../../../src/components/icon/icon.js"],"names":["Icon","size","color","className","align","text","props","undefined","console","warn","icon","defaultProps","renderAs","Text"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAuD;AAAA;;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAvCC,SAAuC,QAAvCA,SAAuC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAZC,KAAY;;AAClE,MAAID,IAAI,KAAKE,SAAb,EAAwB;AACtBC,IAAAA,OAAO,CAACC,IAAR,CACE,mGADF;AAGD;;AACD,sBACE,gCAAC,mBAAD,eACMH,KADN;AAEE,IAAA,SAAS,EAAE,6BAAWH,SAAX;AACTO,MAAAA,IAAI,EAAE,CAACL;AADE,iDAEFJ,IAFE,GAEOA,IAFP,6CAGFG,KAHE,GAGQA,KAHR,mDAIIF,KAJJ,GAIcA,KAJd,gCAKT,WALS,EAKIG,IALJ;AAFb,KADF;AAYD,CAlBD;;AAiDAL,IAAI,CAACW,YAAL,GAAoB;AAClBC,EAAAA,QAAQ,EAAE;AADQ,CAApB;AAIAZ,IAAI,CAACa,IAAL,GAAYA,gBAAZ;eAEeb,I","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Text from './components/text';\n\nimport Element from '../element';\n\nconst Icon = ({ size, color, className, align, text, ...props }) => {\n  if (text !== undefined) {\n    console.warn(\n      '[Deprecation] Text prop for Icon Component its deprecated, please use Icon.Text Component instead',\n    );\n  }\n  return (\n    <Element\n      {...props}\n      className={classnames(className, {\n        icon: !text,\n        [`is-${size}`]: size,\n        [`is-${align}`]: align,\n        [`has-text-${color}`]: color,\n        'icon-text': text,\n      })}\n    />\n  );\n};\n\nIcon.propTypes = {\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  /**\n   * Used when the icon is inside a `Form.Control`\n   */\n  align: PropTypes.oneOf(['left', 'right']),\n  color: PropTypes.oneOfType([\n    PropTypes.oneOf([\n      'primary',\n      'link',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'dark',\n      'text',\n    ]),\n    PropTypes.string,\n  ]),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nIcon.defaultProps = {\n  renderAs: 'span',\n};\n\nIcon.Text = Text;\n\nexport default Icon;\n"],"file":"icon.js"}